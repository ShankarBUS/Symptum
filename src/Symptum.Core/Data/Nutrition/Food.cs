using CommunityToolkit.Mvvm.ComponentModel;
using CsvHelper.Configuration.Attributes;
using Symptum.Core.TypeConversion;

namespace Symptum.Core.Data.Nutrition;

public partial class Food : ObservableObject
{
    public Food()
    { }

    #region Properties

    private string? id;

    public string? Id
    {
        get => id;
        set => SetProperty(ref id, value);
    }

    private string? title;

    public string? Title
    {
        get => title;
        set => SetProperty(ref title, value);
    }

    private List<string>? alternativeNames;

    [TypeConverter(typeof(StringListConverter))]
    public List<string>? AlternativeNames
    {
        get => alternativeNames;
        set => SetProperty(ref alternativeNames, value);
    }

    private List<FoodMeasure>? measures;

    // Measures other than "per 100 g" i.e. cup, bowl, spoon, etc.
    [TypeConverter(typeof(FoodMeasureListConverter))]
    public List<FoodMeasure>? Measures
    {
        get => measures;
        set => SetProperty(ref measures, value);
    }

    #endregion

    // Nutrient Properties:
    // They are observable properties with a GenerateUIAttribute generated by "NutrientQuantityGenerator"
    // from a index file called "NutrientIndex.txt" which contains display names of each nutrient
}
